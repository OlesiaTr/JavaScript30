{"mappings":"YAAA,IAAMA,EAASC,SAASC,eAAe,QACjCC,EAAMH,EAAOI,WAAW,MAE1BC,GAAY,EACZC,GAAY,EACZC,EAAQ,EACRC,EAAQ,EACRC,EAAM,EAEVT,EAAOU,MAAQC,OAAOC,WACtBZ,EAAOa,OAASF,OAAOG,YAEvBX,EAAIY,SAAW,QACfZ,EAAIa,QAAU,QAGdb,EAAIc,yBAA2B,OAwB/BjB,EAAOkB,iBAAiB,aAtBxB,SAAcC,G,MACPd,IAELF,EAAIiB,YAAc,OAAWC,OAAJZ,EAAI,gBAC7BN,EAAImB,YACJnB,EAAIoB,OAAOhB,EAAOC,GAClBL,EAAIqB,OAAOL,EAAEM,QAASN,EAAEO,SACxBvB,EAAIwB,S,EAEa,CAACR,EAAEM,QAASN,EAAEO,SAA9BnB,EAAKqB,EAAA,GAAEpB,EAAKoB,EAAA,KAEbnB,GACW,MAAKA,EAAM,IAElBN,EAAI0B,WAAa,GAAK1B,EAAI0B,WAAa,OAAKvB,GAAaA,GACzDA,EACFH,EAAI0B,YAEJ1B,EAAI0B,Y,IAKR7B,EAAOkB,iBAAiB,aAAa,SAAAC,G,MACnCd,GAAY,E,EACK,CAACc,EAAEM,QAASN,EAAEO,SAA9BnB,EAAKqB,EAAA,GAAEpB,EAAKoB,EAAA,E,IAEf5B,EAAOkB,iBAAiB,WAAW,W,OAAOb,GAAY,C,IACtDL,EAAOkB,iBAAiB,cAAc,W,OAAOb,GAAY,C","sources":["src/js/08-fun-with-HTML5-canvas.js"],"sourcesContent":["const canvas = document.getElementById('draw');\nconst ctx = canvas.getContext('2d');\n\nlet isDrawing = false;\nlet direction = true;\nlet lastX = 0;\nlet lastY = 0;\nlet hue = 0;\n\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\n\nctx.lineJoin = 'round';\nctx.lineCap = 'round';\n// ctx.globalCompositeOperation = 'multiply'; // Colors blend when they go one above the other\n// ctx.globalCompositeOperation = 'screen'; // Colors blend inverted when they go one above the other\nctx.globalCompositeOperation = 'copy'; // Only the new shape is shown, which looks like a ball\n\nfunction draw(e) {\n  if (!isDrawing) return;\n\n  ctx.strokeStyle = `hsl(${hue}, 100%, 50%)`;\n  ctx.beginPath();\n  ctx.moveTo(lastX, lastY); //start from\n  ctx.lineTo(e.offsetX, e.offsetY); //go to\n  ctx.stroke();\n\n  [lastX, lastY] = [e.offsetX, e.offsetY];\n\n  hue++;\n  if (hue >= 360) hue = 0;\n\n  if (ctx.lineWidth <= 1 || ctx.lineWidth >= 100) direction = !direction;\n  if (direction) {\n    ctx.lineWidth++;\n  } else {\n    ctx.lineWidth--;\n  }\n}\n\ncanvas.addEventListener('mousemove', draw);\ncanvas.addEventListener('mousedown', e => {\n  isDrawing = true;\n  [lastX, lastY] = [e.offsetX, e.offsetY];\n});\ncanvas.addEventListener('mouseup', () => (isDrawing = false));\ncanvas.addEventListener('mouseleave', () => (isDrawing = false));\n"],"names":["$9d4305b3df32b6c0$var$canvas","document","getElementById","$9d4305b3df32b6c0$var$ctx","getContext","$9d4305b3df32b6c0$var$isDrawing","$9d4305b3df32b6c0$var$direction","$9d4305b3df32b6c0$var$lastX","$9d4305b3df32b6c0$var$lastY","$9d4305b3df32b6c0$var$hue","width","window","innerWidth","height","innerHeight","lineJoin","lineCap","globalCompositeOperation","addEventListener","e","strokeStyle","concat","beginPath","moveTo","lineTo","offsetX","offsetY","stroke","ref","lineWidth"],"version":3,"file":"08-fun-with-HTML5-canvas.9d5e2560.js.map"}