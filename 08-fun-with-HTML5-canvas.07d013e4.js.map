{"mappings":"AAAA,MAAMA,EAASC,SAASC,eAAe,QACjCC,EAAMH,EAAOI,WAAW,MAE9B,IAAIC,GAAY,EACZC,GAAY,EACZC,EAAQ,EACRC,EAAQ,EACRC,EAAM,EAEVT,EAAOU,MAAQC,OAAOC,WACtBZ,EAAOa,OAASF,OAAOG,YAEvBX,EAAIY,SAAW,QACfZ,EAAIa,QAAU,QAGdb,EAAIc,yBAA2B,OAwB/BjB,EAAOkB,iBAAiB,aAtBxB,SAAcC,GACPd,IAELF,EAAIiB,YAAc,OAAOX,gBACzBN,EAAIkB,YACJlB,EAAImB,OAAOf,EAAOC,GAClBL,EAAIoB,OAAOJ,EAAEK,QAASL,EAAEM,SACxBtB,EAAIuB,UAEHnB,EAAOC,GAAS,CAACW,EAAEK,QAASL,EAAEM,SAE/BhB,IACIA,GAAO,MAAKA,EAAM,IAElBN,EAAIwB,WAAa,GAAKxB,EAAIwB,WAAa,OAAKrB,GAAaA,GACzDA,EACFH,EAAIwB,YAEJxB,EAAIwB,Y,IAKR3B,EAAOkB,iBAAiB,aAAaC,IACnCd,GAAY,GACXE,EAAOC,GAAS,CAACW,EAAEK,QAASL,EAAEM,QAAQ,IAEzCzB,EAAOkB,iBAAiB,WAAW,IAAOb,GAAY,IACtDL,EAAOkB,iBAAiB,cAAc,IAAOb,GAAY","sources":["src/js/08-fun-with-HTML5-canvas.js"],"sourcesContent":["const canvas = document.getElementById('draw');\nconst ctx = canvas.getContext('2d');\n\nlet isDrawing = false;\nlet direction = true;\nlet lastX = 0;\nlet lastY = 0;\nlet hue = 0;\n\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\n\nctx.lineJoin = 'round';\nctx.lineCap = 'round';\n// ctx.globalCompositeOperation = 'multiply'; // Colors blend when they go one above the other\n// ctx.globalCompositeOperation = 'screen'; // Colors blend inverted when they go one above the other\nctx.globalCompositeOperation = 'copy'; // Only the new shape is shown, which looks like a ball\n\nfunction draw(e) {\n  if (!isDrawing) return;\n\n  ctx.strokeStyle = `hsl(${hue}, 100%, 50%)`;\n  ctx.beginPath();\n  ctx.moveTo(lastX, lastY); //start from\n  ctx.lineTo(e.offsetX, e.offsetY); //go to\n  ctx.stroke();\n\n  [lastX, lastY] = [e.offsetX, e.offsetY];\n\n  hue++;\n  if (hue >= 360) hue = 0;\n\n  if (ctx.lineWidth <= 1 || ctx.lineWidth >= 100) direction = !direction;\n  if (direction) {\n    ctx.lineWidth++;\n  } else {\n    ctx.lineWidth--;\n  }\n}\n\ncanvas.addEventListener('mousemove', draw);\ncanvas.addEventListener('mousedown', e => {\n  isDrawing = true;\n  [lastX, lastY] = [e.offsetX, e.offsetY];\n});\ncanvas.addEventListener('mouseup', () => (isDrawing = false));\ncanvas.addEventListener('mouseleave', () => (isDrawing = false));\n"],"names":["$d62216e5d46d57df$var$canvas","document","getElementById","$d62216e5d46d57df$var$ctx","getContext","$d62216e5d46d57df$var$isDrawing","$d62216e5d46d57df$var$direction","$d62216e5d46d57df$var$lastX","$d62216e5d46d57df$var$lastY","$d62216e5d46d57df$var$hue","width","window","innerWidth","height","innerHeight","lineJoin","lineCap","globalCompositeOperation","addEventListener","e","strokeStyle","beginPath","moveTo","lineTo","offsetX","offsetY","stroke","lineWidth"],"version":3,"file":"08-fun-with-HTML5-canvas.07d013e4.js.map"}